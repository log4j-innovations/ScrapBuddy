import 'dart:convert';
import 'dart:io';
import 'package:http/http.dart' as http;

const String SARVAM_API_KEY = 'sk_n538umh4_TRiuwas9MFWXQadxyyAyq2DR';

final Map<String, String> languageCodeMap = {
  'hi': 'hi-IN',
  'ta': 'ta-IN',
  'te': 'te-IN',
};

final Map<String, Map<String, String>> disposalInstructions = {
  'plastic': {
    'hi': 'प्लास्टिक वस्तु को अच्छी तरह से साफ करें। रीसाइक्लिंग नंबर की जांच करें और निर्दिष्ट प्लास्टिक रीसाइक्लिंग बिन में रखें। यदि स्थानीय स्तर पर रीसाइक्लिंग नहीं की जा सकती है, तो सामान्य कचरे में डालें। सुनिश्चित करें कि वस्तु में कोई खतरनाक सामग्री नहीं है।',
    'ta': 'பிளாஸ்டிக் பொருளை நன்றாக சுத்தம் செய்யவும். மறுசுழற்சி எண்ணை சரிபார்த்து, குறிப்பிட்ட பிளாஸ்டிக் மறுசுழற்சி தொட்டியில் வைக்கவும். உள்ளூர் மறுசுழற்சி இல்லை என்றால், பொது குப்பையில் போடவும். பொருளில் ஆபத்தான பொருட்கள் இல்லை என்பதை உறுதிப்படுத்தவும்.',
    'te': 'ప్లాస్టిక్ వస్తువును పూర్తిగా శుభ్రం చేయండి. రీసైక్లింగ్ నంబర్‌ను తనిఖీ చేసి, నిర్దేశించిన ప్లాస్టిక్ రీసైక్లింగ్ బిన్‌లో ఉంచండి. స్థానికంగా రీసైక్లింగ్ చేయలేకపోతే, సాధారణ చెత్తలో వేయండి. వస్తువులో ప్రమాదకరమైన పదార్థాలు లేవని నిర్ధారించుకోండి.',
  },
  'paper': {
    'hi': 'कागज को सूखा और साफ रखें। किसी भी स्टेपल या क्लिप को हटा दें। यदि कागज पर खाद्य पदार्थों का संपर्क हुआ है तो उसे कंपोस्ट में डालें। अन्यथा पेपर रीसाइक्लिंग बिन में डालें। महत्वपूर्ण दस्तावेजों को श्रेड करना न भूलें।',
    'ta': 'காகிதத்தை உலர்ந்த மற்றும் சுத்தமாக வைக்கவும். ஸ்டேப்பிள்கள் அல்லது கிளிப்களை அகற்றவும். உணவு தொடர்பு இருந்தால் கம்போஸ்ட் செய்யவும். இல்லையெனில் காகித மறுசுழற்சி தொட்டியில் போடவும். முக்கியமான ஆவணங்களை அரைக்க மறக்காதீர்கள்.',
    'te': 'కాగితాన్ని పొడిగా మరియు శుభ్రంగా ఉంచండి. స్టేపుల్స్ లేదా క్లిప్‌లను తీసివేయండి. ఆహార సంబంధం ఉంటే కంపోస్ట్ చేయండి. లేకపోతే పేపర్ రీసైక్లింగ్ బిన్‌లో వేయండి. ముఖ్యమైన పత్రాలను చించడం మర్చిపోవద్దు.',
  },
  'metal': {
    'hi': 'धातु के कंटेनर को अच्छी तरह से धोएं और सुखाएं। लेबल हटा दें। यदि संभव हो तो छोटा करें। धातु रीसाइक्लिंग बिन में डालें। सुनिश्चित करें कि कंटेनर में कोई खतरनाक सामग्री या रसायन नहीं हैं। बैटरी और इलेक्ट्रॉनिक्स को अलग से रीसाइकल करें।',
    'ta': 'உலோக கொள்கலன்களை நன்றாக கழுவி உலர்த்தவும். லேபிள்களை அகற்றவும். முடிந்தால் சிறிதாக்கவும். உலோக மறுசுழற்சி தொட்டியில் போடவும். கொள்கலனில் ஆபத்தான பொருட்கள் அல்லது இரசாயனங்கள் இல்லை என்பதை உறுதிப்படுத்தவும். பேட்டரிகள் மற்றும் மின்னணு சாதனங்களை தனியாக மறுசுழற்சி செய்யவும்.',
    'te': 'మెటల్ కంటైనర్‌ను బాగా కడిగి ఆరబెట్టండి. లేబుల్స్ తీసివేయండి. సాధ్యమైతే చిన్నదిగా చేయండి. మెటల్ రీసైక్లింగ్ బిన్‌లో వేయండి. కంటైనర్‌లో ప్రమాదకరమైన పదార్థాలు లేదా రసాయనాలు లేవని నిర్ధారించుకోండి. బ్యాటరీలు మరియు ఎలక్ట్రానిక్స్‌ను విడిగా రీసైకిల్ చేయండి.',
  },
  'glass': {
    'hi': 'कांच के कंटेनर को धोएं और सुखाएं। लेबल और कैप हटा दें। टूटे कांच को सावधानी से संभालें। कांच रीसाइक्लिंग बिन में डालें। रंगीन और साफ कांच को अलग करें यदि आवश्यक हो। सुनिश्चित करें कि सिरेमिक या अन्य गैर-कांच सामग्री मिश्रित न हों।',
    'ta': 'கண்ணாடி கொள்கலன்களை கழுவி உலர்த்தவும். லேபிள்கள் மற்றும் மூடிகளை அகற்றவும். உடைந்த கண்ணாடியை கவனமாக கையாளவும். கண்ணாடி மறுசுழற்சி தொட்டியில் போடவும். வண்ண மற்றும் தெளிவான கண்ணாடியை தேவைப்பட்டால் பிரிக்கவும். செராமிக் அல்லது பிற கண்ணாடி அல்லாத பொருட்கள் கலக்காமல் இருப்பதை உறுதிப்படுத்தவும்.',
    'te': 'గాజు కంటైనర్‌ను కడిగి ఆరబెట్టండి. లేబుల్స్ మరియు క్యాప్‌లను తీసివేయండి. పగిలిన గాజును జాగ్రత్తగా నిర్వహించండి. గాజు రీసైక్లింగ్ బిన్‌లో వేయండి. రంగు మరియు స్పష్టమైన గాజును అవసరమైతే వేరు చేయండి. సెరామిక్ లేదా ఇతర గాజు కాని పదార్థాలు కలవకుండా చూసుకోండి.',
  },
  'cardboard': {
    'hi': 'कार्डबोर्ड को सपाट करें और सूखा रखें। टेप और स्टेपल हटा दें। यदि खाद्य पदार्थों से दूषित है तो कंपोस्ट करें। साफ कार्डबोर्ड को पेपर रीसाइक्लिंग बिन में डालें। बड़े बक्सों को छोटे टुकड़ों में काटें। सुनिश्चित करें कि प्लास्टिक लेमिनेट वाले कार्डबोर्ड को अलग किया जाए।',
    'ta': 'அட்டையை தட்டையாக்கி உலர்ந்த நிலையில் வைக்கவும். டேப் மற்றும் ஸ்டேப்பிள்களை அகற்றவும். உணவு மாசுபட்டிருந்தால் கம்போஸ்ட் செய்யவும். சுத்தமான அட்டையை காகித மறுசுழற்சி தொட்டியில் போடவும். பெரிய பெட்டிகளை சிறிய துண்டுகளாக வெட்டவும். பிளாஸ்டிக் லேமினேட் செய்யப்பட்ட அட்டையை பிரித்து வைக்கவும்.',
    'te': 'కార్డ్‌బోర్డ్‌ను చదునుగా చేసి పొడిగా ఉంచండి. టేప్ మరియు స్టేపుల్స్ తీసివేయండి. ఆహారంతో కలుషితమైతే కంపోస్ట్ చేయండి. శుభ్రమైన కార్డ్‌బోర్డ్‌ను పేపర్ రీసైక్లింగ్ బిన్‌లో వేయండి. పెద్ద పెట్టెలను చిన్న ముక్కలుగా కత్తిరించండి. ప్లాస్టిక్ లామినేట్ చేసిన కార్డ్‌బోర్డ్‌ను వేరు చేయాలని నిర్ధారించుకోండి.',
  }
};

Future<void> generateAudio() async {
  for (var language in languageCodeMap.keys) {
    print('Generating audio for language: $language');
    
    for (var wasteType in disposalInstructions.keys) {
      final text = disposalInstructions[wasteType]![language]!;
      final fileName = '${wasteType}_instructions.mp3';
      final dirPath = 'assets/audio/$language';
      
      try {
        print('Generating audio for $wasteType in $language...');
        
        final response = await http.post(
          Uri.parse('https://api.sarvam.ai/text-to-speech'),
          headers: {
            'api-subscription-key': SARVAM_API_KEY,
            'Content-Type': 'application/json',
            'Accept': 'application/json',
          },
          body: json.encode({
            'text': text,
            'target_language_code': languageCodeMap[language],
            'speaker': 'manisha',
            'model': 'bulbul:v2',
            'output_audio_codec': 'wav'
          }),
        );

        if (response.statusCode == 200) {
          final data = json.decode(response.body);
          if (data['audios'] != null && data['audios'].isNotEmpty) {
            final base64Audio = data['audios'][0];
            final bytes = base64Decode(base64Audio);
            
            final dir = Directory(dirPath);
            if (!await dir.exists()) {
              await dir.create(recursive: true);
            }
            
            final file = File('$dirPath/$fileName');
            await file.writeAsBytes(bytes);
            print('✅ Generated audio for $wasteType in $language');
          }
        } else {
          print('❌ Failed to generate audio for $wasteType in $language: ${response.statusCode}');
        }
      } catch (e) {
        print('❌ Error generating audio for $wasteType in $language: $e');
      }
      
      // Wait a bit between requests to avoid rate limiting
      await Future.delayed(Duration(seconds: 2));
    }
  }
}

void main() async {
  await generateAudio();
}